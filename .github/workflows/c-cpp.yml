name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    strategy:
      matrix:
        sanitizer:
          - none
          - asan-ubsan
          - valgrind
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4.1.6

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            autoconf \
            automake \
            autopoint \
            build-essential \
            clang \
            gcc \
            gettext \
            libtool \
            meson \
            pkg-config \
            valgrind \
            xvfb \
            x11-utils  # Required for X11-related testing, like checking if the window opens

      - name: Set up environment variables
        shell: bash
        run: |
          if [ "${{ matrix.sanitizer }}" = "asan-ubsan" ]; then
            echo "==> Building with ASan + UBSan"
            export CC=clang
            export CXX=clang++
            export CFLAGS="-O1 -g -fsanitize=address,undefined"
            export CXXFLAGS="$CFLAGS"
            export LDFLAGS="-fsanitize=address,undefined"
          elif [ "${{ matrix.sanitizer }}" = "valgrind" ]; then
            echo "==> Building for Valgrind checks"
            export CC=gcc
            export CXX=g++
            export CFLAGS="-O1 -g"
            export CXXFLAGS="$CFLAGS"
          else
            echo "==> Building with no special sanitizer"
            export CC=gcc
            export CXX=g++
            export CFLAGS="-O2"
            export CXXFLAGS="$CFLAGS"
          fi

          # Make these exports visible in subsequent steps
          echo "CC=$CC"         >> $GITHUB_ENV
          echo "CXX=$CXX"       >> $GITHUB_ENV
          echo "CFLAGS=$CFLAGS" >> $GITHUB_ENV
          echo "CXXFLAGS=$CXXFLAGS" >> $GITHUB_ENV
          echo "LDFLAGS=$LDFLAGS"   >> $GITHUB_ENV

      - name: Build and run normal tests
        shell: bash
        run: |
          meson setup builddir --wipe
          sudo meson install -C builddir

      - name: Test the application
        shell: bash
        run: |
          # Run the application (replace `1term` with the actual name of your app)
          # Use Xvfb to simulate an X11 server (for headless environments)
          nohup 1term &
          sleep 10  # Give the app a moment to start up

          # Optionally, use xdotool to check if the window opened (replace '1term' with the window name)
          if xwininfo -name "1term" > /dev/null; then
            echo "Application window opened successfully."
          else
            echo "Failed to open the application window."
            exit 1
          fi

          # Run additional tests if needed
          # For example, you can check for specific logs or output that indicate success
